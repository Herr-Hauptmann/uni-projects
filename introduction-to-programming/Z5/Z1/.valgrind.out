==9383== Memcheck, a memory error detector
==9383== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9383== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==9383== Command: /rhome/m/mucanbarli1/workspace/OR/Z5/Z1/.runme
==9383== Parent PID: 9379
==9383== 
==9383== Invalid read of size 1
==9383==    at 0x108920: apsolutna (main.c:81)
==9383==    by 0x1089A2: main (main.c:99)
==9383==  Address 0x109000 is not stack'd, malloc'd or (recently) free'd
==9383== 
==9383== 
==9383== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==9383==  Access not within mapped region at address 0x109000
==9383==    at 0x108920: apsolutna (main.c:81)
==9383==    by 0x1089A2: main (main.c:99)
==9383==  If you believe this happened as a result of a stack
==9383==  overflow in your program's main thread (unlikely but
==9383==  possible), you can try to increase the size of the
==9383==  main thread stack using the --main-stacksize= flag.
==9383==  The main thread stack size used in this run was 8388608.
==9383== 
==9383== HEAP SUMMARY:
==9383==     in use at exit: 0 bytes in 0 blocks
==9383==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9383== 
==9383== All heap blocks were freed -- no leaks are possible
==9383== 
==9383== For counts of detected and suppressed errors, rerun with: -v
==9383== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
