{
    "buildhost_description": {
        "id": "lab002c27",
        "os": "Linux 2.6.32-754.2.1.el6.x86_64 x86_64\n\"CentOS release 6.10 (Final)\"\n",
        "compiler_version": "gcc (GCC) 6.2.0",
        "debugger_version": "GNU gdb (GDB) 7.12",
        "profiler_version": "valgrind-3.12.0"
    },
    "status": 4,
    "compile_result": {
        "status": 1,
        "output": ""
    },
    "run_result": [],
    "debug_result": [],
    "profile_result": [],
    "test_results": {
        "2263": {
            "status": 5,
            "run_result": {
                "output": "",
                "duration": 0,
                "status": 3,
                "core": "/tmp/buildservice/bs_5394/core.14921"
            },
            "debug_result": {
                "output": "[New LWP 14921]\nCore was generated by `!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x000000000040087c in kompresuj (s=0x7fff6eee9d52 '!' <repeats 200 times>...) at bs_test_2263.c:88\n88\t\t\t\t*p = *q;\n#0  0x000000000040087c in kompresuj (s=0x7fff6eee9d52 '!' <repeats 200 times>...) at bs_test_2263.c:88\n#1  0x0000000000400a07 in main () at bs_test_2263.c:124",
                "parsed_output": [
                    {
                        "file": "main.c",
                        "line": 86
                    }
                ]
            },
            "profile_result": {
                "output": "==14929== exp-sgcheck, a stack and global array overrun detector\n==14929== NOTE: This is an Experimental-Class Valgrind Tool\n==14929== Copyright (C) 2003-2015, and GNU GPL'd, by OpenWorks Ltd et al.\n==14929== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==14929== Command: bs_test_2263\n==14929== Parent PID: 14928\n==14929== \n==14929== Invalid write of size 1\n==14929==    at 0x40087C: kompresuj (bs_test_2263.c:88)\n==14929==    by 0x400A06: main (bs_test_2263.c:124)\n==14929==  Address 0xfff000c54 expected vs actual:\n==14929==  Expected: stack array \"tekst\" of size 100 in frame 1 back from here\n==14929==  Actual:   unknown\n==14929==  Actual:   is 0 after Expected\n==14929== \n==14929== Invalid read of size 1\n==14929==    at 0x40088C: kompresuj (bs_test_2263.c:86)\n==14929==    by 0x400A06: main (bs_test_2263.c:124)\n==14929==  Address 0xfff000c54 expected vs actual:\n==14929==  Expected: stack array \"tekst\" of size 100 in frame 1 back from here\n==14929==  Actual:   unknown\n==14929==  Actual:   is 0 after Expected\n==14929== \n==14929== Invalid read of size 1\n==14929==    at 0x400875: kompresuj (bs_test_2263.c:88)\n==14929==    by 0x400A06: main (bs_test_2263.c:124)\n==14929==  Address 0xfff000c54 expected vs actual:\n==14929==  Expected: stack array \"tekst\" of size 100 in frame 1 back from here\n==14929==  Actual:   unknown\n==14929==  Actual:   is 0 after Expected\n==14929== \n==14929== \n==14929== Process terminating with default action of signal 11 (SIGSEGV)\n==14929==  Access not within mapped region at address 0xFFF001000\n==14929==    at 0x40087C: kompresuj (bs_test_2263.c:88)\n==14929==    by 0x400A06: main (bs_test_2263.c:124)\n==14929==  If you believe this happened as a result of a stack\n==14929==  overflow in your program's main thread (unlikely but\n==14929==  possible), you can try to increase the size of the\n==14929==  main thread stack using the --main-stacksize= flag.\n==14929==  The main thread stack size used in this run was 10485760.\n==14929== \n==14929== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)\n",
                "status": 2,
                "parsed_output": [
                    {
                        "type": 2,
                        "output": " Invalid write of size 1\n    at 0x40087C: kompresuj (bs_test_2263.c:88)\n    by 0x400A06: main (bs_test_2263.c:124)\n  Address 0xfff000c54 expected vs actual:\n  Expected: stack array \"tekst\" of size 100 in frame 1 back from here\n  Actual:   unknown\n  Actual:   is 0 after Expected\n",
                        "file": "main.c",
                        "line": 86
                    },
                    {
                        "type": 2,
                        "output": " Invalid read of size 1\n    at 0x40088C: kompresuj (bs_test_2263.c:86)\n    by 0x400A06: main (bs_test_2263.c:124)\n  Address 0xfff000c54 expected vs actual:\n  Expected: stack array \"tekst\" of size 100 in frame 1 back from here\n  Actual:   unknown\n  Actual:   is 0 after Expected\n",
                        "file": "main.c",
                        "line": 84
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "2264": {
            "status": 6,
            "run_result": {
                "output": "'!a5bbb!!!c12'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "2265": {
            "status": 5,
            "run_result": {
                "output": "",
                "duration": 0,
                "status": 3,
                "core": "/tmp/buildservice/bs_5394/core.14964"
            },
            "debug_result": {
                "output": "[New LWP 14964]\nCore was generated by `O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x000000000040087c in kompresuj (s=0x7ffcc09668e3 \"O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1\"...) at bs_test_2265.c:88\n88\t\t\t\t*p = *q;\n#0  0x000000000040087c in kompresuj (s=0x7ffcc09668e3 \"O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1O1\"...) at bs_test_2265.c:88\n#1  0x00000000004009e8 in main () at bs_test_2265.c:123",
                "parsed_output": [
                    {
                        "file": "main.c",
                        "line": 86
                    }
                ]
            },
            "profile_result": {
                "output": "==14972== exp-sgcheck, a stack and global array overrun detector\n==14972== NOTE: This is an Experimental-Class Valgrind Tool\n==14972== Copyright (C) 2003-2015, and GNU GPL'd, by OpenWorks Ltd et al.\n==14972== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==14972== Command: bs_test_2265\n==14972== Parent PID: 14971\n==14972== \n==14972== Invalid read of size 1\n==14972==    at 0x40088C: kompresuj (bs_test_2265.c:86)\n==14972==    by 0x4009E7: main (bs_test_2265.c:123)\n==14972==  Address 0xfff000c31 expected vs actual:\n==14972==  Expected: unknown\n==14972==  Actual:   stack array \"tekst\" of size 40 in frame 1 back from here\n==14972== \n==14972== Invalid write of size 1\n==14972==    at 0x40087C: kompresuj (bs_test_2265.c:88)\n==14972==    by 0x4009E7: main (bs_test_2265.c:123)\n==14972==  Address 0xfff000c58 expected vs actual:\n==14972==  Expected: stack array \"tekst\" of size 40 in frame 1 back from here\n==14972==  Actual:   unknown\n==14972==  Actual:   is 0 after Expected\n==14972== \n==14972== Invalid read of size 1\n==14972==    at 0x40088C: kompresuj (bs_test_2265.c:86)\n==14972==    by 0x4009E7: main (bs_test_2265.c:123)\n==14972==  Address 0xfff000c58 expected vs actual:\n==14972==  Expected: stack array \"tekst\" of size 40 in frame 1 back from here\n==14972==  Actual:   unknown\n==14972==  Actual:   is 0 after Expected\n==14972== \n==14972== Invalid read of size 1\n==14972==    at 0x400875: kompresuj (bs_test_2265.c:88)\n==14972==    by 0x4009E7: main (bs_test_2265.c:123)\n==14972==  Address 0xfff000c58 expected vs actual:\n==14972==  Expected: stack array \"tekst\" of size 40 in frame 1 back from here\n==14972==  Actual:   unknown\n==14972==  Actual:   is 0 after Expected\n==14972== \n==14972== \n==14972== Process terminating with default action of signal 11 (SIGSEGV)\n==14972==  Access not within mapped region at address 0xFFF001000\n==14972==    at 0x40087C: kompresuj (bs_test_2265.c:88)\n==14972==    by 0x4009E7: main (bs_test_2265.c:123)\n==14972==  If you believe this happened as a result of a stack\n==14972==  overflow in your program's main thread (unlikely but\n==14972==  possible), you can try to increase the size of the\n==14972==  main thread stack using the --main-stacksize= flag.\n==14972==  The main thread stack size used in this run was 10485760.\n==14972== \n==14972== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)\n",
                "status": 2,
                "parsed_output": [
                    {
                        "type": 2,
                        "output": " Invalid read of size 1\n    at 0x40088C: kompresuj (bs_test_2265.c:86)\n    by 0x4009E7: main (bs_test_2265.c:123)\n  Address 0xfff000c31 expected vs actual:\n  Expected: unknown\n  Actual:   stack array \"tekst\" of size 40 in frame 1 back from here\n",
                        "file": "main.c",
                        "line": 84
                    },
                    {
                        "type": 2,
                        "output": " Invalid write of size 1\n    at 0x40087C: kompresuj (bs_test_2265.c:88)\n    by 0x4009E7: main (bs_test_2265.c:123)\n  Address 0xfff000c58 expected vs actual:\n  Expected: stack array \"tekst\" of size 40 in frame 1 back from here\n  Actual:   unknown\n  Actual:   is 0 after Expected\n",
                        "file": "main.c",
                        "line": 86
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "2266": {
            "status": 1,
            "run_result": {
                "output": "'Ovo je neki primjer teksta. wwwxxxyyzzz'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "2267": {
            "status": 5,
            "run_result": {
                "output": "",
                "duration": 0,
                "status": 3,
                "core": "/tmp/buildservice/bs_5394/core.15007"
            },
            "debug_result": {
                "output": "[New LWP 15007]\nCore was generated by `444444444444444444444444444444444444444'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x000000000040087c in kompresuj (s=0x7ffd82d299e5 '4' <repeats 200 times>...) at bs_test_2267.c:88\n88\t\t\t\t*p = *q;\n#0  0x000000000040087c in kompresuj (s=0x7ffd82d299e5 '4' <repeats 200 times>...) at bs_test_2267.c:88\n#1  0x0000000000400a3b in main () at bs_test_2267.c:123",
                "parsed_output": [
                    {
                        "file": "main.c",
                        "line": 86
                    }
                ]
            },
            "profile_result": {
                "output": "==15015== exp-sgcheck, a stack and global array overrun detector\n==15015== NOTE: This is an Experimental-Class Valgrind Tool\n==15015== Copyright (C) 2003-2015, and GNU GPL'd, by OpenWorks Ltd et al.\n==15015== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==15015== Command: bs_test_2267\n==15015== Parent PID: 15014\n==15015== \n==15015== Invalid write of size 1\n==15015==    at 0x400661: UbaciUzv (bs_test_2267.c:28)\n==15015==    by 0x4006C2: kompresuj (bs_test_2267.c:41)\n==15015==    by 0x400A3A: main (bs_test_2267.c:123)\n==15015==  Address 0xfff000c55 expected vs actual:\n==15015==  Expected: unknown\n==15015==  Actual:   stack array \"tekst\" of size 86 in frame 2 back from here\n==15015== \n==15015== Invalid read of size 1\n==15015==    at 0x40074D: kompresuj (bs_test_2267.c:55)\n==15015==    by 0x400A3A: main (bs_test_2267.c:123)\n==15015==  Address 0xfff000c56 expected vs actual:\n==15015==  Expected: stack array \"tekst\" of size 86 in frame 1 back from here\n==15015==  Actual:   unknown\n==15015==  Actual:   is 0 after Expected\n==15015== \n==15015== Invalid write of size 1\n==15015==    at 0x40087C: kompresuj (bs_test_2267.c:88)\n==15015==    by 0x400A3A: main (bs_test_2267.c:123)\n==15015==  Address 0xfff000c56 expected vs actual:\n==15015==  Expected: stack array \"tekst\" of size 86 in frame 1 back from here\n==15015==  Actual:   unknown\n==15015==  Actual:   is 0 after Expected\n==15015== \n==15015== Invalid read of size 1\n==15015==    at 0x40088C: kompresuj (bs_test_2267.c:86)\n==15015==    by 0x400A3A: main (bs_test_2267.c:123)\n==15015==  Address 0xfff000c56 expected vs actual:\n==15015==  Expected: stack array \"tekst\" of size 86 in frame 1 back from here\n==15015==  Actual:   unknown\n==15015==  Actual:   is 0 after Expected\n==15015== \n==15015== Invalid read of size 1\n==15015==    at 0x400875: kompresuj (bs_test_2267.c:88)\n==15015==    by 0x400A3A: main (bs_test_2267.c:123)\n==15015==  Address 0xfff000c56 expected vs actual:\n==15015==  Expected: stack array \"tekst\" of size 86 in frame 1 back from here\n==15015==  Actual:   unknown\n==15015==  Actual:   is 0 after Expected\n==15015== \n==15015== \n==15015== Process terminating with default action of signal 11 (SIGSEGV)\n==15015==  Access not within mapped region at address 0xFFF001000\n==15015==    at 0x40087C: kompresuj (bs_test_2267.c:88)\n==15015==    by 0x400A3A: main (bs_test_2267.c:123)\n==15015==  If you believe this happened as a result of a stack\n==15015==  overflow in your program's main thread (unlikely but\n==15015==  possible), you can try to increase the size of the\n==15015==  main thread stack using the --main-stacksize= flag.\n==15015==  The main thread stack size used in this run was 10485760.\n==15015== \n==15015== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)\n",
                "status": 2,
                "parsed_output": [
                    {
                        "type": 2,
                        "output": " Invalid write of size 1\n    at 0x400661: UbaciUzv (bs_test_2267.c:28)\n    by 0x4006C2: kompresuj (bs_test_2267.c:41)\n    by 0x400A3A: main (bs_test_2267.c:123)\n  Address 0xfff000c55 expected vs actual:\n  Expected: unknown\n  Actual:   stack array \"tekst\" of size 86 in frame 2 back from here\n",
                        "file": "main.c",
                        "line": 26
                    },
                    {
                        "type": 2,
                        "output": " Invalid read of size 1\n    at 0x40074D: kompresuj (bs_test_2267.c:55)\n    by 0x400A3A: main (bs_test_2267.c:123)\n  Address 0xfff000c56 expected vs actual:\n  Expected: stack array \"tekst\" of size 86 in frame 1 back from here\n  Actual:   unknown\n  Actual:   is 0 after Expected\n",
                        "file": "main.c",
                        "line": 53
                    },
                    {
                        "type": 2,
                        "output": " Invalid write of size 1\n    at 0x40087C: kompresuj (bs_test_2267.c:88)\n    by 0x400A3A: main (bs_test_2267.c:123)\n  Address 0xfff000c56 expected vs actual:\n  Expected: stack array \"tekst\" of size 86 in frame 1 back from here\n  Actual:   unknown\n  Actual:   is 0 after Expected\n",
                        "file": "main.c",
                        "line": 86
                    },
                    {
                        "type": 2,
                        "output": " Invalid read of size 1\n    at 0x40088C: kompresuj (bs_test_2267.c:86)\n    by 0x400A3A: main (bs_test_2267.c:123)\n  Address 0xfff000c56 expected vs actual:\n  Expected: stack array \"tekst\" of size 86 in frame 1 back from here\n  Actual:   unknown\n  Actual:   is 0 after Expected\n",
                        "file": "main.c",
                        "line": 84
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "2268": {
            "status": 6,
            "run_result": {
                "output": "'!!!@4##!$6!%3!^8!&6!*4(((!)5___!+4!04!15!24!32!41!54!63!77!!84!91'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "2269": {
            "status": 5,
            "run_result": {
                "output": "",
                "duration": 1,
                "status": 3,
                "core": "/tmp/buildservice/bs_5394/core.15050"
            },
            "debug_result": {
                "output": "[New LWP 15050]\nCore was generated by `T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x000000000040087c in kompresuj (s=0x7ffd3fad2f84 \"1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T\"...) at bs_test_2269.c:88\n88\t\t\t\t*p = *q;\n#0  0x000000000040087c in kompresuj (s=0x7ffd3fad2f84 \"1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T1T\"...) at bs_test_2269.c:88\n#1  0x00000000004009e7 in main () at bs_test_2269.c:123",
                "parsed_output": [
                    {
                        "file": "main.c",
                        "line": 86
                    }
                ]
            },
            "profile_result": {
                "output": "==15058== exp-sgcheck, a stack and global array overrun detector\n==15058== NOTE: This is an Experimental-Class Valgrind Tool\n==15058== Copyright (C) 2003-2015, and GNU GPL'd, by OpenWorks Ltd et al.\n==15058== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==15058== Command: bs_test_2269\n==15058== Parent PID: 15057\n==15058== \n==15058== Invalid write of size 1\n==15058==    at 0x40087C: kompresuj (bs_test_2269.c:88)\n==15058==    by 0x4009E6: main (bs_test_2269.c:123)\n==15058==  Address 0xfff000c56 expected vs actual:\n==15058==  Expected: stack array \"tekst\" of size 38 in frame 1 back from here\n==15058==  Actual:   unknown\n==15058==  Actual:   is 0 after Expected\n==15058== \n==15058== Invalid read of size 1\n==15058==    at 0x40088C: kompresuj (bs_test_2269.c:86)\n==15058==    by 0x4009E6: main (bs_test_2269.c:123)\n==15058==  Address 0xfff000c56 expected vs actual:\n==15058==  Expected: stack array \"tekst\" of size 38 in frame 1 back from here\n==15058==  Actual:   unknown\n==15058==  Actual:   is 0 after Expected\n==15058== \n==15058== Invalid read of size 1\n==15058==    at 0x400875: kompresuj (bs_test_2269.c:88)\n==15058==    by 0x4009E6: main (bs_test_2269.c:123)\n==15058==  Address 0xfff000c56 expected vs actual:\n==15058==  Expected: stack array \"tekst\" of size 38 in frame 1 back from here\n==15058==  Actual:   unknown\n==15058==  Actual:   is 0 after Expected\n==15058== \n==15058== \n==15058== Process terminating with default action of signal 11 (SIGSEGV)\n==15058==  Access not within mapped region at address 0xFFF001000\n==15058==    at 0x40087C: kompresuj (bs_test_2269.c:88)\n==15058==    by 0x4009E6: main (bs_test_2269.c:123)\n==15058==  If you believe this happened as a result of a stack\n==15058==  overflow in your program's main thread (unlikely but\n==15058==  possible), you can try to increase the size of the\n==15058==  main thread stack using the --main-stacksize= flag.\n==15058==  The main thread stack size used in this run was 10485760.\n==15058== \n==15058== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)\n",
                "status": 2,
                "parsed_output": [
                    {
                        "type": 2,
                        "output": " Invalid write of size 1\n    at 0x40087C: kompresuj (bs_test_2269.c:88)\n    by 0x4009E6: main (bs_test_2269.c:123)\n  Address 0xfff000c56 expected vs actual:\n  Expected: stack array \"tekst\" of size 38 in frame 1 back from here\n  Actual:   unknown\n  Actual:   is 0 after Expected\n",
                        "file": "main.c",
                        "line": 86
                    },
                    {
                        "type": 2,
                        "output": " Invalid read of size 1\n    at 0x40088C: kompresuj (bs_test_2269.c:86)\n    by 0x4009E6: main (bs_test_2269.c:123)\n  Address 0xfff000c56 expected vs actual:\n  Expected: stack array \"tekst\" of size 38 in frame 1 back from here\n  Actual:   unknown\n  Actual:   is 0 after Expected\n",
                        "file": "main.c",
                        "line": 84
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "2270": {
            "status": 6,
            "run_result": {
                "output": "'! 10Tekst!a6! 16'",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "2271": {
            "status": 5,
            "run_result": {
                "output": "",
                "duration": 0,
                "status": 3,
                "core": "/tmp/buildservice/bs_5394/core.15093"
            },
            "debug_result": {
                "output": "[New LWP 15093]\nCore was generated by `bs_test_2271'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x0000000000400a9d in main () at bs_test_2271.c:130\n130\t}\n#0  0x0000000000400a9d in main () at bs_test_2271.c:130",
                "parsed_output": [
                    {
                        "file": "TEST_CODE",
                        "line": 10
                    }
                ]
            },
            "profile_result": {
                "output": "==15101== exp-sgcheck, a stack and global array overrun detector\n==15101== NOTE: This is an Experimental-Class Valgrind Tool\n==15101== Copyright (C) 2003-2015, and GNU GPL'd, by OpenWorks Ltd et al.\n==15101== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==15101== Command: bs_test_2271\n==15101== Parent PID: 15100\n==15101== \n==15101== Invalid write of size 1\n==15101==    at 0x400661: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x400649: UbaciUzv (bs_test_2271.c:26)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c58 expected vs actual:\n==15101==  Expected: stack array \"tekst\" of size 200 in frame 2 back from here\n==15101==  Actual:   unknown\n==15101==  Actual:   is 0 after Expected\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x40065E: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x40065E: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid write of size 1\n==15101==    at 0x400661: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x400649: UbaciUzv (bs_test_2271.c:26)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c58 expected vs actual:\n==15101==  Expected: stack array \"tekst\" of size 200 in frame 2 back from here\n==15101==  Actual:   unknown\n==15101==  Actual:   is 0 after Expected\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x40065E: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid write of size 1\n==15101==    at 0x400661: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x400649: UbaciUzv (bs_test_2271.c:26)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c58 expected vs actual:\n==15101==  Expected: stack array \"tekst\" of size 200 in frame 2 back from here\n==15101==  Actual:   unknown\n==15101==  Actual:   is 0 after Expected\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x40065E: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid write of size 1\n==15101==    at 0x400661: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x400649: UbaciUzv (bs_test_2271.c:26)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c58 expected vs actual:\n==15101==  Expected: stack array \"tekst\" of size 200 in frame 2 back from here\n==15101==  Actual:   unknown\n==15101==  Actual:   is 0 after Expected\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x40065E: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid write of size 1\n==15101==    at 0x400661: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x400649: UbaciUzv (bs_test_2271.c:26)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c58 expected vs actual:\n==15101==  Expected: stack array \"tekst\" of size 200 in frame 2 back from here\n==15101==  Actual:   unknown\n==15101==  Actual:   is 0 after Expected\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x40065E: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid write of size 1\n==15101==    at 0x400661: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x400649: UbaciUzv (bs_test_2271.c:26)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c58 expected vs actual:\n==15101==  Expected: stack array \"tekst\" of size 200 in frame 2 back from here\n==15101==  Actual:   unknown\n==15101==  Actual:   is 0 after Expected\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x40065E: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid write of size 1\n==15101==    at 0x400661: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x400649: UbaciUzv (bs_test_2271.c:26)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c58 expected vs actual:\n==15101==  Expected: stack array \"tekst\" of size 200 in frame 2 back from here\n==15101==  Actual:   unknown\n==15101==  Actual:   is 0 after Expected\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x40065E: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid write of size 1\n==15101==    at 0x400661: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x400649: UbaciUzv (bs_test_2271.c:26)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c58 expected vs actual:\n==15101==  Expected: stack array \"tekst\" of size 200 in frame 2 back from here\n==15101==  Actual:   unknown\n==15101==  Actual:   is 0 after Expected\n==15101== \n==15101== Invalid read of size 1\n==15101==    at 0x40065E: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n==15101==    by 0x400A75: main (bs_test_2271.c:127)\n==15101==  Address 0xfff000c57 expected vs actual:\n==15101==  Expected: unknown\n==15101==  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n==15101== \n==15101== Invalid write of size 1\n==15101==    at 0x400661: UbaciUzv (bs_test_2271.c:28)\n==15101==    by 0x4006C2: kompresuj (bs_test_2271.c:",
                "status": 2,
                "parsed_output": [
                    {
                        "type": 2,
                        "output": " Invalid write of size 1\n    at 0x400661: UbaciUzv (bs_test_2271.c:28)\n    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n    by 0x400A75: main (bs_test_2271.c:127)\n  Address 0xfff000c57 expected vs actual:\n  Expected: unknown\n  Actual:   stack array \"tekst\" of size 200 in frame 2 back from here\n",
                        "file": "main.c",
                        "line": 26
                    },
                    {
                        "type": 2,
                        "output": " Invalid read of size 1\n    at 0x400649: UbaciUzv (bs_test_2271.c:26)\n    by 0x4006C2: kompresuj (bs_test_2271.c:41)\n    by 0x400A75: main (bs_test_2271.c:127)\n  Address 0xfff000c58 expected vs actual:\n  Expected: stack array \"tekst\" of size 200 in frame 2 back from here\n  Actual:   unknown\n  Actual:   is 0 after Expected\n",
                        "file": "main.c",
                        "line": 24
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "2272": {
            "status": 6,
            "run_result": {
                "output": "Greska 0 !\nGreska 0 b\nGreska 1 1\nGreska 1 0\nGreska 1 1\nGreska 1 c\nGreska 1 !\nGreska 2 9\nGreska 2 d\nGreska 2 !\nGreska 3 9\nGreska 3 e\nGreska 3 !\nGreska 4 9\nGreska 4 f\nGreska 4 !\nGreska 5 9\nGreska 5 g\nGreska 5 !\nGreska 6 9\nGreska 6 h\nGreska 6 !\nGreska 7 9\nGreska 7 i\nGreska 7 !\nGreska 8 9\nGreska 8 j\nGreska 8 !\nGreska 9 9\nGreska 9 k\nGreska 9 !\nGreska 10 9\nGreska 10 l\nGreska 10 !\nGreska 11 9\nGreska 11 m\nGreska 11 !\nGreska 12 9\nGreska 12 n\nGreska 12 !\nGreska 13 9\nGreska 13 o\nGreska 13 !\nGreska 14 9\nGreska 14 p\nGreska 14 !\nGreska 15 9\nGreska 15 q\nGreska 15 !\nGreska 16 9\nGreska 16 r\nGreska 16 !\nGreska 17 9\nGreska 17 s\nGreska 17 !\nGreska 18 9\nGreska 18 t\nGreska 18 !\nGreska 19 9\nGreska 19 u\nGreska 19 !\nGreska 20 9\nGreska 20 v\nGreska 20 !\nGreska 21 9\nGreska 21 w\nGreska 21 !\nGreska 22 9\nGreska 22 x\nGreska 22 !\nGreska 23 9\nGreska 23 y\nGreska 23 !\nGreska 24 9\nGreska 24 a\nGreska 24 !\nGreska 25 9\nGreska 25 b\nGreska 25 !\nGreska 26 9\nGreska 26 c\nGreska 26 !\nGreska 27 9\nGreska 27 d\nGreska 27 !\nGreska 28 9\nGreska 28 e\nGreska 28 !\nGreska 29 9\nGreska 29 f\nGreska 29 !\nGreska 30 9\nGreska 30 g\nGreska 30 !\nGreska 31 9\nGreska 31 h\nGreska 31 !\nGreska 32 9\nGreska 32 i\nGreska 32 !\nGreska 33 9\nGreska 33 j\nGreska 33 !\nGreska 34 9\nGreska 34 k\nGreska 34 !\nGreska 35 9\nGreska 35 l\nGreska 35 !\nGreska 36 9\nGreska 36 m\nGreska 36 !\nGreska 37 9\nGreska 37 n\nGreska 37 !\nGreska 38 9\nGreska 38 o\nGreska 38 !\nGreska 39 9\nGreska 39 p\nGreska 39 !\nGreska 40 9\nGreska 40 q\nGreska 40 !\nGreska 41 9\nGreska 41 r\nGreska 41 !\nGreska 42 9\nGreska 42 s\nGreska 42 !\nGreska 43 9\nGreska 43 t\nGreska 43 !\nGreska 44 9\nGreska 44 u\nGreska 44 !\nGreska 45 9\nGreska 45 v\nGreska 45 !\nGreska 46 9\nGreska 46 w\nGreska 46 !\nGreska 47 9\nGreska 47 x\nGreska 47 !\nGreska 48 9\nGreska 48 y\nGreska 48 !\nGreska 49 9\nGreska 49 a\nGreska 49 !\nGreska 50 9\nGreska 50 b\nGreska 50 !\nGreska 51 9\nGreska 51 c\nGreska 51 !\nGreska 52 9\nGreska 52 d\nGreska 52 !\nGreska 53 9\nGreska 53 e\nGreska 53 !\nGreska 54 9\nGreska 54 f\nGreska 54 !\nGreska 55 9\nGreska 55 g\nGreska 55 !\nGreska 56 9\nGreska 56 h\nGreska 56 !\nGreska 57 9\nGreska 57 i\nGreska 57 !\nGreska 58 9\nGreska 58 j\nGreska 58 !\nGreska 59 9\nGreska 59 k\nGreska 59 !\nGreska 60 9\nGreska 60 l\nGreska 60 !\nGreska 61 9\nGreska 61 m\nGreska 61 !\nGreska 62 9\nGreska 62 n\nGreska 62 !\nGreska 63 9\nGreska 63 o\nGreska 63 !\nGreska 64 9\nGreska 64 p\nGreska 64 !\nGreska 65 9\nGreska 65 q\nGreska 65 !\nGreska 66 9\nGreska 66 r\nGreska 66 !\nGreska 67 9\nGreska 67 s\nGreska 67 !\nGreska 68 9\nGreska 68 t\nGreska 68 !\nGreska 69 9\nGreska 69 u\nGreska 69 !\nGreska 70 9\nGreska 70 v\nGreska 70 !\nGreska 71 9\nGreska 71 w\nGreska 71 !\nGreska 72 9\nGreska 72 x\nGreska 72 !\nGreska 73 9\nGreska 73 y\nGreska 73 !\nGreska 74 9\nGreska 74 a\nGreska 74 !\nGreska 75 9\nGreska 75 b\nGreska 75 !\nGreska 76 9\nGreska 76 c\nGreska 76 !\nGreska 77 9\nGreska 77 d\nGreska 77 !\nGreska 78 9\nGreska 78 e\nGreska 78 !\nGreska 79 9\nGreska 79 f\nGreska 79 !\nGreska 80 9\nGreska 80 g\nGreska 80 !\nGreska 81 9\nGreska 81 h\nGreska 81 !\nGreska 82 9\nGreska 82 i\nGreska 82 !\nGreska 83 9\nGreska 83 j\nGreska 83 !\nGreska 84 9\nGreska 84 k\nGreska 84 !\nGreska 85 9\nGreska 85 l\nGreska 85 !\nGreska 86 9\nGreska 86 m\nGreska 86 !\nGreska 87 9\nGreska 87 n\nGreska 87 !\nGreska 88 9\nGreska 88 o\nGreska 88 !\nGreska 89 9\nGreska 89 p\nGreska 89 !\nGreska 90 9\nGreska 90 q\nGreska 90 !\nGreska 91 9\nGreska 91 r\nGreska 91 !\nGreska 92 9\nGreska 92 s\nGreska 92 !\nGreska 93 9\nGreska 93 t\nGreska 93 !\nGreska 94 9\nGreska 94 u\nGreska 94 !\nGreska 95 9\nGreska 95 v\nGreska 95 !\nGreska 96 9\nGreska 96 w\nGreska 96 !\nGreska 97 9\nGreska 97 x\nGreska 97 !\nGreska 98 9\nGreska 98 y\nGreska 98 !\nGreska 99 9\nGreska 99 \u0000\nGreska 99 !\nDekompresuj greska 0 0 a\nDekompresuj greska 0 2 b\nDekompresuj greska 0 3 !\nDekompresuj greska 0 4 b\nDekompresuj greska 0 5 1\nDekompresuj greska 0 6 0\nDekompresuj greska 0 7 1\nDekompresuj greska 0 8 c\nDekompresuj greska 0 9 !\nDekompresuj greska 0 10 c\nDekompresuj greska 0 11 9\nDekompresuj greska 0 12 9\nDekompresuj greska 0 13 d\nDekompresuj greska 0 14 !\nDekompresuj greska 0 15 d\nDekompresuj greska 0 16 9\nDekompresuj greska 0 17 9\nDekompresuj greska 0 18 e\nDekompresuj greska 0 19 !\nDekompresuj greska 0 20 e\nDekompresuj greska 0 21 9\nDekompresuj greska 0 22 9\nDekompresuj greska 0 23 f\nDekompresuj greska 0 24 !\nDekompresuj greska 0 25 f\nDekompresuj greska 0 26 9\nDekompresuj greska 0 27 9\nDekompresuj greska 0 28 g\nDekompresuj greska 0 29 !\nDekompresuj greska 0 30 g\nDekompresuj greska 0 31 9\nDekompresuj greska 0 32 9\nDekompresuj greska 0 33 h\nDekompresuj greska 0 34 !\nDekompresuj greska 0 35 h\nDekompresuj greska 0 36 9\nDekompresuj greska 0 37 9\nDekompresuj greska 0 38 i\nDekompresuj greska 0 39 !\nDekompresuj greska 0 40 i\nDekompresuj greska 0 41 9\nDekompresuj greska 0 42 9\nDekompresuj greska 0 43 j\nDekompresuj greska 0 44 !\nDekompresuj greska 0 45 j\nDekompresuj greska 0 46 9\nDekompresuj greska 0 47 9\nDekompresuj greska 0 48 k\nDekompresuj greska 0 49 !\nDekompresuj greska 0 50 k\nDekompresuj greska 0 51 9\nDekompresuj greska 0 52 9\nDekompresuj greska 0 53 l\nDekompresuj greska 0 54 !\nDekompresuj greska 0 55 l\nDekompresuj greska 0 56 9\nDekompresuj greska 0 57 9\nDekompresuj greska 0 58 m\nDekompresuj greska 0 59 !\nDekompresuj greska 0 60 m\nDekompresuj greska 0 61 9\nDekompresuj greska 0 62 9\nDekompresuj greska 0 63 n\nDekompresuj greska 0 64 !\nDekompresuj greska 0 65 n\nDekompresuj greska 0 66 9\nDekompresuj greska 0 67 9\nDekompresuj greska 0 68 o\nDekompresuj greska 0 69 !\nDekompresuj greska 0 70 o\nDekompresuj greska 0 71 9\nDekompresuj greska 0 72 9\nDekompresuj greska 0 73 p\nDekompresuj greska 0 74 !\nDekompresuj greska 0 75 p\nDekompresuj greska 0 76 9\nDekompresuj greska 0 77 9\nDekompresuj greska 0 78 q\nDekompresuj greska 0 79 !\nDekompresuj greska 0 80 q\nDekompresuj greska 0 81 9\nDekompresuj greska 0 82 9\nDekompresuj greska 0 83 r\nDekompresuj greska 0 84 !\nDekompresuj greska 0 85 r\nDekompresuj greska 0 86 9\nDekompresuj greska 0 87 9\nDekompresuj greska 0 88 s\nDekompresuj greska 0 89 !\nDekompresuj greska 0 90 s\nDekompresuj greska 0 91 9\nDekompresuj greska 0 92 9\nDekompresuj greska 0 93 t\nDekompresuj greska 0 94 !\nDekompresuj greska 0 95 t\nDekompresuj greska 0 96 9\nDekompresuj greska 0 97 9\nDekompresuj greska 0 98 u\nDekompresuj greska 0 99 !\nDekompresuj greska 1 0 u\nDekompresuj greska 1 1 9\nDekompresuj greska 1 2 9\nDekompresuj greska 1 3 v\nDekompresuj greska 1 4 !\nDekompresuj greska 1 5 v\nDekompresuj greska 1 6 9\nDekompresuj greska 1 7 9\nDekompresuj greska 1 8 w\nDekompresuj greska 1 9 !\nDekompresuj greska 1 10 w\nDekompresuj greska 1 11 9\nDekompresuj greska 1 12 9\nDekompresuj greska 1 13 x\nDekompresuj greska 1 14 !\nDekompresuj greska 1 15 x\nDekompresuj greska 1 16 9\nDekompresuj greska 1 17 9\nDekompresuj greska 1 18 y\nDekompresuj greska 1 19 !\nDekompresuj greska 1 20 y\nDekompresuj greska 1 21 9\nDekompresuj greska 1 22 9\nDekompresuj greska 1 23 a\nDekompresuj greska 1 24 !\nDekompresuj greska 1 25 a\nDekompresuj greska 1 26 9\nDekompresuj greska 1 27 9\nDekompresuj greska 1 28 b\nDekompresuj greska 1 30 b\nDekompresuj greska 1 32 9\nDekompresuj greska 1 33 c\nDekompresuj greska 1 34 !\nDekompresuj greska 1 35 c\nDekompresuj greska 1 36 9\nDekompresuj greska 1 37 9\nDekompresuj greska 1 38 d\nDekompresuj greska 1 39 !\nDekompresuj greska 1 40 d\nDekompresuj greska 1 41 9\nDekompresuj greska 1 42 9\nDekompresuj greska 1 43 e\nDekompresuj greska 1 44 !\nDekompresuj greska 1 45 e\nDekompresuj greska 1 46 9\nDekompresuj greska 1 47 9\nDekompresuj greska 1 48 f\nDekompresuj greska 1 49 !\nDekompresuj greska 1 50 f\nDekompresuj greska 1 51 9\nDekompresuj greska 1 52 9\nDekompresuj greska 1 53 g\nDekompresuj greska 1 54 !\nDekompresuj greska 1 55 g\nDekompresuj greska 1 56 9\nDekompresuj greska 1 57 9\nDekompresuj greska 1 58 h\nDekompresuj greska 1 59 !\nDekompresuj greska 1 60 h\nDekompresuj greska 1 61 9\nDekompresuj greska 1 62 9\nDekompresuj greska 1 63 i\nDekompresuj greska 1 64 !\nDekompresuj greska 1 65 i\nDekompresuj greska 1 66 9\nDekompresuj greska 1 67 9\nDekompresuj greska 1 68 j\nDekompresuj greska 1 69 !\nDekompresuj greska 1 70 j\nDekompresuj greska 1 71 9\nDekompresuj greska 1 72 9\nDekompresuj greska 1 73 k\nDekompresuj greska 1 74 !\nDekompresuj greska 1 75 k\nDekompresuj greska 1 76 9\nDekompresuj greska 1 77 9\nDekompresuj greska 1 78 l\nDekompresuj greska 1 79 !\nDekompresuj greska 1 80 l\nDekompresuj greska 1 81 9\nDekompresuj greska 1 82 9\nDekompresuj greska 1 83 m\nDekompresuj greska 1 84 !\nDekompresuj greska 1 85 m\nDekompresuj greska 1 86 9\nDekompresuj greska 1 87 9\nDekompresuj greska 1 88 n\nDekompresuj greska 1 89 !\nDekompresuj greska 1 90 n\nDekompresuj greska 1 91 9\nDekompresuj greska 1 92 9\nDekompresuj greska 1 93 o\nDekompresuj greska 1 94 !\nDekompresuj greska 1 95 o\nDekompresuj greska 1 96 9\nDekompresuj greska 1 97 9\nDekompresuj greska 1 98 p\nDekompresuj greska 1 99 !\nDekompresuj greska 2 0 p\nDekompresuj greska 2 1 9\nDekompresuj greska 2 2 9\nDekompresuj greska 2 3 q\nDekompresuj greska 2 4 !\nDekompresuj greska 2 5 q\nDekompresuj greska 2 6 9\nDekompresuj greska 2 7 9\nDekompresuj greska 2 8 r\nDekompresuj greska 2 9 !\nDekompresuj greska 2 10 r\nDekompresuj greska 2 11 9\nDekompresuj greska 2 12 9\nDekompresuj greska 2 13 s\nDekompresuj greska 2 14 !\nDekompresuj greska 2 15 s\nDekompresuj greska 2 16 9\nDekompresuj greska 2 17 9\nDekompresuj greska 2 18 t\nDekompresuj greska 2 19 !\nDekompresuj greska 2 20 t\nDekompresuj greska 2 21 9\nDekompresuj greska 2 22 9\nDekompresuj greska 2 23 u\nDekompresuj greska 2 24 !\nDekompresuj greska 2 25 u\nDekompresuj greska 2 26 9\nDekompresuj greska 2 27 9\nDekompresuj greska 2 28 v\nDekompresuj greska 2 29 !\nDekompresuj greska 2 30 v\nDekompresuj greska 2 31 9\nDekompresuj greska 2 32 9\nDekompresuj greska 2 33 w\nDekompresuj greska 2 34 !\nDekompresuj greska 2 35 w\nDekompresuj greska 2 36 9\nDekompresuj greska 2 37 9\nDekompresuj greska 2 38 x\nDekompresuj greska 2 39 !\nDekompresuj greska 2 40 x\nDekompresuj greska 2 41 9\nDekompresuj greska 2 42 9\nDekompresuj greska 2 43 y\nDekompresuj greska 2 44 !\nDekompresuj greska 2 45 y\nDekompresuj greska 2 46 9\nDekompresuj greska 2 47 9\nDekompresuj greska 2 48 a\nDekompresuj greska 2 49 !\nDekompresuj g\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": {
                "output": "==15120== exp-sgcheck, a stack and global array overrun detector\n==15120== NOTE: This is an Experimental-Class Valgrind Tool\n==15120== Copyright (C) 2003-2015, and GNU GPL'd, by OpenWorks Ltd et al.\n==15120== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==15120== Command: bs_test_2272\n==15120== Parent PID: 15119\n==15120== \n==15120== Invalid read of size 1\n==15120==    at 0x40074D: kompresuj (bs_test_2272.c:55)\n==15120==    by 0x400A0B: main (bs_test_2272.c:133)\n==15120==  Address 0xfff000c40 expected vs actual:\n==15120==  Expected: stack array \"tekst\" of size 10,000 in frame 1 back from here\n==15120==  Actual:   unknown\n==15120==  Actual:   is 0 after Expected\n==15120== \n==15120== Invalid read of size 1\n==15120==    at 0x40074D: kompresuj (bs_test_2272.c:55)\n==15120==    by 0x400A0B: main (bs_test_2272.c:133)\n==15120==  Address 0xffeffe596 expected vs actual:\n==15120==  Expected: unknown\n==15120==  Actual:   stack array \"tekst\" of size 10,000 in frame 1 back from here\n==15120== \n",
                "status": 2,
                "parsed_output": [
                    {
                        "type": 2,
                        "output": " Invalid read of size 1\n    at 0x40074D: kompresuj (bs_test_2272.c:55)\n    by 0x400A0B: main (bs_test_2272.c:133)\n  Address 0xfff000c40 expected vs actual:\n  Expected: stack array \"tekst\" of size 10,000 in frame 1 back from here\n  Actual:   unknown\n  Actual:   is 0 after Expected\n",
                        "file": "main.c",
                        "line": 53
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        }
    },
    "queue_items": 0,
    "time": 1566899512
}