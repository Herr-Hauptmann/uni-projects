==1055== Memcheck, a memory error detector
==1055== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1055== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==1055== Command: /rhome/m/mucanbarli1/workspace/OR/ZSR13/Z11/.runme
==1055== Parent PID: 1049
==1055== 
==1055== Invalid read of size 8
==1055==    at 0x50BD8E0: fwrite (iofwrite.c:37)
==1055==    by 0x108D51: sacuvaj (main.c:69)
==1055==    by 0x108DCF: main (main.c:89)
==1055==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1055== 
==1055== 
==1055== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1055==  Access not within mapped region at address 0x8
==1055==    at 0x50BD8E0: fwrite (iofwrite.c:37)
==1055==    by 0x108D51: sacuvaj (main.c:69)
==1055==    by 0x108DCF: main (main.c:89)
==1055==  If you believe this happened as a result of a stack
==1055==  overflow in your program's main thread (unlikely but
==1055==  possible), you can try to increase the size of the
==1055==  main thread stack using the --main-stacksize= flag.
==1055==  The main thread stack size used in this run was 8388608.
==1055== 
==1055== HEAP SUMMARY:
==1055==     in use at exit: 552 bytes in 1 blocks
==1055==   total heap usage: 1 allocs, 0 frees, 552 bytes allocated
==1055== 
==1055== LEAK SUMMARY:
==1055==    definitely lost: 0 bytes in 0 blocks
==1055==    indirectly lost: 0 bytes in 0 blocks
==1055==      possibly lost: 0 bytes in 0 blocks
==1055==    still reachable: 552 bytes in 1 blocks
==1055==         suppressed: 0 bytes in 0 blocks
==1055== Reachable blocks (those to which a pointer was found) are not shown.
==1055== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1055== 
==1055== For counts of detected and suppressed errors, rerun with: -v
==1055== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
